import base64, codecs
magic = 'aW1wb3J0IG9zCmltcG9ydCBzeXMKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCB0aW1lCmltcG9ydCByZQppbXBvcnQgdXJsbGliLnBhcnNlCm9zLnN5c3RlbSgnY2xlYXInKQphbmkgPSgnJydcMDMzWzE7MzNtCiAgICAgICAgICAgICAgICAgICAgICAgICAgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KICAgICAgICAgICAgICAgICAgX19fX19fX198ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxfX19fX19fCiAgICAgICAgICAgICAgICAgIFwgICAgICAgfCAgICAgICAgIEhBTUEgU09GVFdBUkUgICAgICAgICB8ICAgICAgLwogICAgICAgICAgICAgICAgICAgXCAgICAgIHwgICAgICBSZXBvcnQgUG9zdCBJbnN0YWdyYW0gICAgfCAgICAgLyAKICAgICAgICAgICAgICAgICAgIC8gICAgICB8X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX3wgICAgIFwgCiAgICAgICAgICAgICAgICAgIC9fX19fX19fX19fKSAgICAgICAgICAgICAgICAgICAgICAgICAoX19fX19fX19fXCBcCiAgICAgICAgICAgICAgICAgIFwwMzNbMTszN20KICAgICAgICAgICAgICAgICAgJycnKQogICAgICAgICAgICAgICAgICAKZGVmIGJhbm5lcigpOiNoYW1hX3NvZnR3YXJlCiAgICAgICAgcHJpbnQgKCcnJ1wwMzNbMTszM20KICAgICAgICAgICAgICAgICAgICAgICAgICBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwogICAgICAgICAgICAgICAgICBfX19fX19fX3wgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfF9fX19fX18KICAgICAgICAgICAgICAgICAgXCAgICAgICB8ICAgICAgICAgSEFNQSBTT0ZUV0FSRSAgICAgICAgIHwgICAgICAvCiAgICAgICAgICAgICAgICAgICBcICAgICAgfCAgICAgIFJlcG9ydCBQb3N0IEluc3RhZ3JhbSAgICB8ICAgICAvIAogICAgICAgICAgICAgICAgICAgLyAgICAgIHxfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19ffCAgICAgXCAKICAgICAgICAgICAgICAgICAgL19fX19fX19fX18pICAgICAgICAgICAgICAgICAgICAgICAgIChfX19fX19fX19cIFwKICAgICAgICAgICAgICAgICAgXDAzM1sxOzM3bQogICAgICAgICAgICAgICAgICAnJycpCgpsb29wID0gVHJ1ZQppZiBsb29wOgogICB1cmwgPSAiaHR0cHM6Ly90ZXh0dXBsb2FkZXIuY29tL3RzbWVzL3JhdyIKICAgZ2V0cyA9IHJlcXVlc3RzLmdldCh1cmwpLnRleHQKICAgaWYgIkJZRSIgaW4gZ2V0czoKICAgICBwcmludCgiVGhpcyBUb29sIFN0b3BwZWQgQnkgQGhhbWFfc29mdHdhcmUgU29ycnkgQnJvIDooICIpCiAgICAgc3lzLmV4aXQoKQogICBlbHNlOgogICAgIGxvb3AgPSBGYWxzZQpiYW5uZXIoKQoKVSA9IGlucHV0KCJbP10gVXNlcm5hbWU6IikKUCA9IGlucHV0KCJbP10gUGFzc3dvcmQ6IikKZGVmIHNwYW1fcCgpOgogIGR5YXIgPSAwCiAgcHJpbnQoIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQogIFBPU1RfQ09ERSA9IGlucHV0KCJbIFBPU1RfQ09ERSBdIDogIikKICBwcmludCgiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpCiAgUE9TVF9VUkwgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wLyIrUE9TVF9DT0RFKyIvIgogIFVSTF9HRVQgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wLyIrUE9TVF9DT0RFKyIvP19fYT0xIgogIEdFVF9VID0gcmVxdWVzdHMuZ2V0KFVSTF9HRVQsIGhlYWRlcnM9eyJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBNQVItTFgxQSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJIb3N0Ijoid3d3Lmluc3RhZ3JhbS5jb20ifSkudGV4dAogIGZpbmQgPSByZS5jb21waWxlKHInImlkIjoiKC4qPykiJykKICBmaW5kX2lkID0gZmluZC5maW5kYWxsKEdFVF9VKQogIFBPU1RfSUQgPSBmaW5kX2lkWzBdCgoKICAjLS0tLS0tLS0tLSQtLS0tLS0tLS0tLS0tJC0tLSYtJiYKICBIRUFEID0gewogICAgJ2FjY2VwdCc6ICcqLyonLAogICAgJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2FyLGVuLVVTO3E9MC45LGVuO3E9MC44JywKICAgICdjb250ZW50LWxlbmd0aCc6ICcyNzQnLAogICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAogICAgJ2Nvb2tpZSc6ICdpZ19kaWQ9M0U3MERCOTMtNEEyNy00M0VCLTg0NjMtRTBCRkM5QjAyQUUxOyBtaWQ9WUNBYWRBQUxBQUgzNWdfN2U3aDBTd0JiRnpCdDsgaWdfbnJjYj0xOyBydXI9VkxMOyBjc3JmdG9rZW49SXdxMWhuWE5KM1k4SUgxZlJZRE5ENnI3MlplenEyOEknLAogICAgJ29yaWdpbic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tJywKICAgICdyZWZlcmVyJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vJywKICAgICdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsCiAgICAnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsCiAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLAogICAgJ3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg4LjAuNDMyNC4xNTAgU2FmYXJpLzUzNy4zNicsCiAgICAneC1jc3JmdG9rZW4nOiAnSXdxMWhuWE5KM1k4SUgxZlJZRE5ENnI3MlplenEyOEknLAogICAgJ3gtaWctYXBwLWlkJzogJzkzNjYxOTc0MzM5MjQ1OScsCiAgICAneC1pZy13d3ctY2xhaW0nOiAnaG1hYy5BUjNQOGVBNDVnNUVMTDNscWRJbS1ESEtZMk1TWV9rR1drTjB0R0V3RzJLczlKOGEnLAogICAgJ3gtaW5zdGFncmFtLWFqYXgnOiAnMWNiNDRmNjhmZmVjJywKICAgICd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0JwogIH0KICBVUkwgPSAnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LycKICBQQVlMT0FEID0gewogICAgJ3VzZXJuYW1lJzogVSwKICAgICdlbmNfcGFzc3dvcmQnOiAnI1BXRF9JTlNUQUdSQU1fQlJPV1NFUjowOjE2MTMyMTI3MjU6JytQLAogICAgJ3F1ZXJ5UGFyYW1zJzogJ3t9JywKICAgICdvcHRJbnRvT25lVGFwJzogJ2ZhbHNlJwogIH0KICBMT0dJTiA9IHJlcXVlc3RzLnBvc3QoVVJMLCBoZWFkZXJzPUhFQUQsIGRhdGE9UEFZTE9BRCkKICBpZiAneyJ1c2VyIjpmYWxzZSwnIGluIExPR0lOLnRleHQ6CiAgICBwcmludCgiRW1haWwgT3IgUGFzc3dvcmQgaXMgV3JvbmcgKCAiK1UrIiApIikKICAgIGV4aXQoKQogIGVsaWYgJ3sidXNlciI6dHJ1ZSwnIGluIExPR0lOLnRleHQ6CiAgICBwcmludCgiTG9naW4gQXMgKCAiK1UrIiApIikKICAgIGxvZ2luID0gVHJ1ZQogIGxvZ2luX3NlcyA9IExPR'
love = '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'
god = '1TWV9rR1drTjB0R0V3RzJLczlKOGEnLAogICAgJ3gtaW5zdGFncmFtLWFqYXgnOiAnMWNiNDRmNjhmZmVjJywKICAgICd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0JwogIH0KICBVUkwgPSAnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LycKICBQQVlMT0FEID0gewogICAgJ3VzZXJuYW1lJzogVSwKICAgICdlbmNfcGFzc3dvcmQnOiAnI1BXRF9JTlNUQUdSQU1fQlJPV1NFUjowOjE2MTMyMTI3MjU6JytQLAogICAgJ3F1ZXJ5UGFyYW1zJzogJ3t9JywKICAgICdvcHRJbnRvT25lVGFwJzogJ2ZhbHNlJwogIH0KICBMT0dJTiA9IHJlcXVlc3RzLnBvc3QoVVJMLCBoZWFkZXJzPUhFQUQsIGRhdGE9UEFZTE9BRCkKICBpZiAneyJ1c2VyIjpmYWxzZSwnIGluIExPR0lOLnRleHQ6CiAgICBwcmludCgiRW1haWwgT3IgUGFzc3dvcmQgaXMgV3JvbmcgKCAiK1UrIiApIikKICAgIGV4aXQoKQogIGVsaWYgJ3sidXNlciI6dHJ1ZSwnIGluIExPR0lOLnRleHQ6CiAgICBwcmludCgiTG9naW4gQXMgKCAiK1UrIiApIikKICAgIGxvZ2luID0gVHJ1ZQogIGxvZ2luX3NlcyA9IExPR0lOLmNvb2tpZXMKICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgVVJMX0MgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9yZXBvcnRzL3dlYi9nZXRfZnJ4X3Byb21wdC8iCiAgSEVBRF9DID0gewogICAgICJIb3N0Ijoid3d3Lmluc3RhZ3JhbS5jb20iLAogICAgICJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKEFuZHJvaWQgMTA7IE1vYmlsZTsgcnY6ODguMCkgR2Vja28vODguMCBGaXJlZm94Lzg4LjAiLAogICAgICJhY2NlcHQiOiIqLyoiLAogICAgICJhY2NlcHQtbGFuZ3VhZ2UiOiJlbi1VUyIsCiAgICAgIngtY3NyZnRva2VuIjpsb2dpbl9zZXNbJ2NzcmZ0b2tlbiddLAogICAgICJ4LWluc3RhZ3JhbS1hamF4IjoiYzc5NWI0MjczYzQyIiwKICAgICAieC1pZy1hcHAtaWQiOiIxMjE3OTgxNjQ0ODc5NjI4IiwKICAgICAieC1pZy13d3ctY2xhaW0iOiJobWFjLkFSMUJ5clFjX0k4SGZFb3o5T19YMzNWcXRHRnF6TUlpZTdMM3haaDFWaEdROHIwbiIsCiAgICAgImNvbnRlbnQtdHlwZSI6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsCiAgICAgIngtcmVxdWVzdGVkLXdpdGgiOiJYTUxIdHRwUmVxdWVzdCIsCiAgICAgIm9yaWdpbiI6Imh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20iLAogICAgICJyZWZlcmVyIjpQT1NUX1VSTAogIH0KICBEQVRBX0MgPSB7CiAgICAiZW50cnlfcG9pbnQiOiIxIiwKICAgICJsb2NhdGlvbiI6IjYiLAogICAgIm9iamVjdF90eXBlIjoiMSIsCiAgICAib2JqZWN0X2lkIjpQT1NUX0lELAogICAgImNvbnRhaW5lcl9tb2R1bGUiOiJwb3N0UGFnZSIsCiAgICAiZnJ4X3Byb21wdF9yZXF1ZXN0X3R5cGUiOiIxIgogIH0KICBHRVRfQ09OVEVYVCA9IHJlcXVlc3RzLnBvc3QoVVJMX0MsIGhlYWRlcnM9SEVBRF9DLCBkYXRhPURBVEFfQywgY29va2llcz1sb2dpbl9zZXMpCiAgR0VUX1RFWFQgPSBHRVRfQ09OVEVYVC5qc29uKClbJ3Jlc3BvbnNlJ11bJ2NvbnRleHQnXQogIEVOQ09ERV9DT05URVhUID0gdXJsbGliLnBhcnNlLnF1b3RlKEdFVF9URVhUKQogIEFQSV9WID0gImlnX3NlbGZfaW5qdXJ5X3YzIgogIGZvciBpIGluIHJhbmdlKDk5OTk5OSk6CiAgICBVUlMgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9yZXBvcnRzL3dlYi9sb2dfdGFnX3NlbGVjdGVkLyIKICAgIEhFQURfcmVwID0geyJIb3N0Ijoid3d3Lmluc3RhZ3JhbS5jb20iLCJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKEFuZHJvaWQgMTA7IE1vYmlsZTsgcnY6ODguMCkgR2Vja28vODguMCBGaXJlZm94Lzg4LjAiLCJhY2NlcHQiOiIqLyoiLCJ4LWNzcmZ0b2tlbiI6bG9naW5fc2VzWydjc3JmdG9rZW4nXSwieC1pbnN0YWdyYW0tYWpheCI6ImM3OTViNDI3M2M0MiIsIngtaWctYXBwLWlkIjoiMTIxNzk4MTY0NDg3OTYyOCIsIngtaWctd3d3LWNsYWltIjoiaG1hYy5BUjFCeXJRY19JOEhmRW96OU9fWDMzVnF0R0Zxek1JaWU3TDN4WmgxVmhHUThyMG4iLCJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCJ4LXJlcXVlc3RlZC13aXRoIjoiWE1MSHR0cFJlcXVlc3QiLCJvcmlnaW4iOiJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tIiwicmVmZXJlciI6UE9TVF9VUkx9CiAgICBEQVRBX3JlcCA9IHsiY29udGV4dCI6RU5DT0RFX0NPTlRFWFQsInNlbGVjdGVkX3RhZ190eXBlIjpBUElfVn0KICAgIFNFTkRfUiA9IHJlcXVlc3RzLnBvc3QoVVJTLCBoZWFkZXJzPUhFQURfcmVwLCBkYXRhPURBVEFfcmVwLCBjb29raWVzPWxvZ2luX3NlcykKICAgIEYgPSBTRU5EX1IuanNvbigpWydzdGF0dXMnXQogICAgb3Muc3lzdGVtKCJjbGVhciIpCiAgICBwcmludChhbmkpCiAgICBwcmludCgiXG5cbkFjY291bnQgSW5zdGFncmFtIChAe30pIi5mb3JtYXQoVSkpCiAgICBwcmludCgiXG5bUkVQT1JUIF0gU0VORCBSRVBPUlQgOiAiK3N0cihkeWFyMikpCiAgICBkeWFyMis9IDEKCmRlZiBoYXRlX3AoKToKICBkeWFyMjIgPSAwCiAgcHJpbnQoIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQogIFBPU1RfQ09ERSA9IGlucHV0KCJbIFBPU1RfQ09ERSBdIDogIikKICBwcmludCgiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpCiAgUE9TVF9VUkwgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wLyIrUE9TVF9DT0RFKyIvIgogIFVSTF9HRVQgPSAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9wLyIrUE9TVF9DT0RFKyIvP19fYT0xIgogIEdFVF9VID0gcmVxdWVzdHMuZ2V0KFVSTF9HRVQsIGhlYWRlcnM9eyJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBNQVItTFgxQSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJIb3N0Ijoid3d3Lmluc3RhZ3JhbS5jb20ifSkudGV4dAogIGZpbmQgPSByZS5jb21waWxlKHInImlkIjoiKC4qPykiJykKICBmaW5kX2lkID0gZmluZC5maW5kYWxsKEdFVF9VKQogIFBPU1RfSUQgPSBmaW5kX2lkWzBdCgoKICAjLS0tLS0tLS0tLSQtLS0tLS0tLS0tLS0tJC0tLSYtJiYKICBIRUFEID0gewogICAgJ2FjY2VwdCc6ICcqLyonLAogICAgJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2FyLGVuLVVTO3E9MC45LGVuO3E9MC44JywKICAgICdjb250ZW50LWxlbmd0aCc6ICcyNzQnLAogICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAogICAgJ2Nvb2tpZSc6ICdpZ19kaWQ9M0U3MERCOTMtNEEyNy00M0VCLTg0NjMtRTBCRkM5QjAyQUU'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))